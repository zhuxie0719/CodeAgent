Summary of Changes

Issue Fixed
Fixed the TeardownCallable type definition to accept functions returning any type, not just Response objects. According to Flask documentation, the return values of teardown functions are ignored, so they should be allowed to return any type.

Files Modified

src/flask/typing.py
Change: Modified the TeardownCallable type definition from t.Callable[[t.Optional[BaseException]], "Response"] to t.Callable[[t.Optional[BaseException]], t.Any]
Location: Line with TeardownCallable definition (approximately line 45)
Reason: The original type definition only allowed functions returning Response objects, but teardown functions should be able to return any type since their return values are ignored as per Flask documentation.

Testing
- All existing Flask app context tests pass (14/14)
- All existing Flask basic teardown tests pass (3/3)
- Custom tests confirm teardown functions with various return types (None, string, int, dict, Response) all work correctly
- Verified that return values are properly ignored regardless of type
- Confirmed teardown functions work correctly with and without exceptions

Backups Created
backup-agent/typing.py (original typing.py file)
